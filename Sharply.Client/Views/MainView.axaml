<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:views="using:Sharply.Client.Views"
             xmlns:vm="clr-namespace:Sharply.Client.ViewModels"
			 xmlns:converters="using:Sharply.Client.Converters"
             mc:Ignorable="d"
             d:DesignWidth="1200" d:DesignHeight="700"
             x:Class="Sharply.Client.Views.MainView"
             x:DataType="vm:MainViewModel">

	<UserControl.Resources>
		<converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
		<converters:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter" />
	</UserControl.Resources>

	<UserControl.Styles>
		<Style Selector="TextBox:focus-within /template/ Border">
			<Setter Property="Background" Value="{DynamicResource TextBoxSelectedBackgroundBrush}" />
			<Setter Property="BorderBrush" Value="{DynamicResource TextBoxSelectedBorderBrush}" />
		</Style>

		<Style Selector="TextBox:pointerover /template/ Border">
			<Setter Property="Background" Value="{DynamicResource TextBoxSelectedBackgroundBrush}" />
			<Setter Property="BorderBrush" Value="{DynamicResource TextBoxSelectedBorderBrush}" />
		</Style>

		<Style Selector="ListBoxItem:selected /template/ ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource TextBoxSelectedBackgroundBrush}" />
			<Setter Property="BorderBrush" Value="{DynamicResource TextBoxSelectedBorderBrush}" />
		</Style>
	</UserControl.Styles>

	<Grid Background="{DynamicResource BackgroundBrush}">
		<Grid.ColumnDefinitions>
			<!-- Server List -->
			<ColumnDefinition Width="140" />
			<!-- Server Content -->
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<!-- Server List -->
		<Border Grid.Column="0" Background="{DynamicResource InputBackgroundBrush}" Margin="5" CornerRadius="8">
			<StackPanel>
				<TextBlock Text="Servers" Foreground="{DynamicResource PrimaryTextBrush}" FontWeight="Bold" Margin="10,10,10,5" FontSize="16"/>

				<!-- Underline effect... pretty weird -->
				<ListBox Background="{DynamicResource InputBackgroundBrush}"
                         Foreground="{DynamicResource PrimaryTextBrush}"
                         BorderBrush="{DynamicResource AccentBrush}"
                         BorderThickness="1"
                         Margin="10,0,10,10" />

				<!-- Actual list box -->
				<ListBox Background="{DynamicResource InputBackgroundBrush}"
                         Foreground="{DynamicResource PrimaryTextBrush}"
                         Margin="5,0,10,10"
						 SelectedItem="{Binding SelectedServer}"
                         SelectionMode="Single"
						 ItemsSource="{Binding Servers}">
					<ListBox.ItemTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Name}"
									   VerticalAlignment="Center"
									   HorizontalAlignment="Left"
									   FontSize="12"
									   Foreground="{DynamicResource PrimaryTextBrush}">
								<TextBlock.Styles>
									<Style Selector="TextBlock:hover">
										<Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}" />
										<Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
									</Style>
								</TextBlock.Styles>
							</TextBlock>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
				<Button Content="Test Overlay"
						VerticalAlignment="Bottom"
                        Background="{DynamicResource AccentBrush}"
                        Foreground="{DynamicResource PrimaryTextBrush}"
                        Margin="10,0,10,10"
                        Padding="5"
						Command="{Binding TestToggleOverlayCommand}"
                        CornerRadius="4"/>
			</StackPanel>
		</Border>

		<views:ServerContentView Grid.Column="1"
								 IsVisible="{Binding IsServerSelected, Converter={StaticResource BoolToVisibilityConverter}}" />
		<views:NoServerSelectedView Grid.Column="1"
									IsVisible="{Binding IsServerSelected, Converter={StaticResource InvertedBoolToVisibilityConverter}}" />

	</Grid>
</UserControl>
